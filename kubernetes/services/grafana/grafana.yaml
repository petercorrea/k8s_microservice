apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 3
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-pvc
      securityContext:
        fsGroup: 472

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: do-block-storage
provisioner: dobs.csi.digitalocean.com
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  fsType: ext4

---
apiVersion: v1
kind: Secret
metadata:
  name: digitalocean
stringData:
  access-token: ${do_block_storage_token}
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: grafana
#   namespace: default
# spec:
#   podSelector:
#     matchLabels:
#       app: grafana
#   policyTypes:
#     - Egress
#   egress:
#     - to:
#         - podSelector:
#             matchLabels:
#               app: loki
#       ports:
#         - protocol: TCP
#           port: 3100
#     - to: # Allow DNS lookup
#         - namespaceSelector: {}
#       ports:
#         - protocol: UDP
#           port: 53
#         - protocol: TCP
#           port: 53
